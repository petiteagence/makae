
- var resolveImageSrc = function(src){
- 	return (src.toLowerCase().indexOf('http') > -1) ? src : 'img/'+src;
- }

- var markup = function(text){
-   if(!text) return '';
- 	text = text.replace(/\[saut\]/, '<br>');
- 	text = text.replace(/\[gras\|([^\]]*)\]/, '<strong>$1</strong>');
- 	text = text.replace(/\[italique\|([^\]]*)\]/, '<em>$1</em>');
- 	text = text.replace(/\[petit\|([^\]]*)\]/, '<small>$1</small>');
- 	text = text.replace(/\[lien\|([^\|]*)\|([^\]]*)\]/, '<a href="$2">$1</a>');
- 	text = text.replace(/\[ancre\|([^\|]*)\|([^\]]*)\]/, '<a href="#$2">$1</a>');
- 	return text
- }

mixin img(src,alt,lien)
	if lien
		a.image(href=lien)
			img(src=resolveImageSrc(src), alt=alt, title=alt)
	else
		span.image
			img(src=resolveImageSrc(src), alt=alt, title=alt)

	

mixin render(bloc)
	+#{'render_'+bloc.type}(bloc)

mixin render_titre(bloc)
	.bloc(class='bloc_'+bloc.type)
		div.item
			h3!= markup(bloc.titre)
			if bloc.soustitre
				h4.item!= markup(bloc.soustitre)

mixin render_image(bloc)
	.bloc(class='bloc_'+bloc.type)
		figure.item
			+img(bloc.imageUrl, bloc.imageAlt, bloc.imageLien)
			if bloc.imageLegende
				figcaption!= markup(bloc.imageLegende)

mixin render_textes(bloc)
	.bloc(class='bloc_'+bloc.type)
		for i in bloc.items
			if i.lien
				a.item(href=i.lien)
					+render_blocItem(i)
			else
				.item
					+render_blocItem(i)


mixin render_blocItem(i)
	if i.liste
		div.liste(class=i.imagePosition||'dessus')
			- if(i.imageUrl && i.imagePosition != "dessous")
				+img(i.imageUrl, i.imageAlt, i.imageLien)
			ul
				for li in i.liste
					li!= markup(li)
			- if(i.imageUrl && i.imagePosition == "dessous")
				+img(i.imageUrl, i.imageAlt, i.imageLien)
		
	else
		div.texte(class=i.imagePosition||'dessus')
			//- if i.gras
			//- 	strong!= markup(i.gras)
			- if(i.imageUrl && i.imagePosition != "dessous")
				+img(i.imageUrl, i.imageAlt, i.imageLien)
			if i.texte
				p!= markup(i.texte)
			- if(i.imageUrl && i.imagePosition == "dessous")
				+img(i.imageUrl, i.imageAlt, i.imageLien)


mixin render_box3D(bloc)
	.bloc(class='bloc_'+bloc.type)
		ul.boxes
			for b in bloc.boxes
				li.w_box
					a.box(class='box_'+b.boxColor, href='#'+b.lien)
						.box_img
							+img(b.imageUrl, b.imageAlt)
						.box_info
							p!= markup(b.texte)





doctype html
html(lang="fr")
	include jade/head

body

	div.page

		header.section.section-header
			a(name='header')
			.layer_bg(style="background-image: url(img/"+header.image+")")
			.layer_fg
				include jade/header
				//- include jade/nav
			
		
		for section in sections
			section.section(class='theme_'+section.theme)
				a(name=section.id)
				.section_maxwidth
					for bloc in section.blocs
						+render(bloc)


		footer.section.section-footer
			a(name='footer')
			.section_maxwidth
				for bloc in footer.blocs
					+render(bloc)
